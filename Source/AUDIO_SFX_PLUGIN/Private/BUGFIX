SYMP: error C2248 'FSlateControlledConstruction::operator new': cannot access private member declared in class 'FSlateControlledConstruction'	...	
SOLU: It appears TSharedRef<> in-class type declarations, and *.toSharedRef() class members are not allowed on derived Slates 

SYMP: error UMGViewportComponent derived from class SWindow, and other components - undefined
SOLU: Move forward class declarations into (global scope) header file: class SWindow, class IModuleInterface, class FToolBarBuilder, class FMenuBuilder, class FViewportClient

SYMP: UE_FLOAT64 SampleRateUInt64 = 44'100_hz; // error user-defined operator not found (overloaded operator"")
SOLU: UE_FLOAT64 SampleRateUInt64 = 44'100.0_hz; // Add float designation

SYMP: error C2338 invalid template input to std::unifrm_real_distribution (pragma once Tones.Default.Settings.h Scoping error; Multiple local template declarations)
SOLU: Move std::uniform_real_distribution<UE_FLOAT64> declaration into global Tones.Default.Settings.h: using UniformRealDistributionFloat64 = std::uniform_real_distribution<UE_FLOAT64>;

SYMP: error overloaded template not found - std::complex<double>& c_ref = c;
SOLU: An object reference must always be initialized with the address of an object - std::complex<double> c(0.0f, 0.0f); std::complex<double>& c_ref = c;

SYPM: error C3861 ComplexVectorFloat64T not defined
SOLU: using ComplexVectorFloat64T = <std::vector<std::complex<T>>>; ==> using ComplexVectorFloat64T = std::vector<std::complex<T>>;

SYMP: error C4430 Missing type specifier, int assumed: BuildPrecision, PlaybackPrecision
SOLU: class IDEPlaybackPrecision : public BuildPrecision<short> ==> class IDEPlaybackPrecision : public IDEBuildPrecision<short>
      class IDEBuildPrecision ... BuildPrecision(); ==> class IDEBuildPrecision ... IDEBuildPrecision();
      class IDEPlaybackPrecision ... PlaybackPrecision(); ==> class ... IDEPlaybackPrecision();

SYMP: error C2955: 'Vector2DT': use of alias template requires template argument list
SOLU: Vector2DT ==> Vector2DT<T>;

SYMP: error SpringReverb.cpp: SpringReverb is not a template
SOLU: [no namespace] ==> using namespace ToneLibrary;

SYMP: error object already defined in seperate module. Multiple object definitions, ignoring.
UNRESOLVED: Ensure includes don't branch into branching (compiled) unused source files; ensure there is only one Main. INCLUDES HIERARCHY: Tones.Default.Settings.h > ToneLibrary[App Modules + Tools + Filters etc.] > Tones.h > AUDIO_SFX_PLUGIN.h

SYMP: Project builds multiple modules in final solution 
PATCH: Remove empty or incomplete class declarations and implementations from project

SYMP: error no instance of overloaded functions matches the argument list
SOLU: PluginCommands->MapAction(..., FExecuteAction::CreateRaw(this, &GeneratePerlinNoiseMenuAPI),...); ==> PluginCommands->MapAction(...,  FExecuteAction::CreateRaw(this, &UMGViewportComponent::GeneratePerlinNoiseMenuAPI), ...);

SYMP: UE crashes on close, Assertion Failed: GetFName() == NAME_None
SOLU: Modify TSharedPtr<UToolMenu> MenuPtr = TSharedPtr<UToolMenu>(...); >> UToolMenu* MenuPtr = ...;
NOTE: To mitigate hard-to-find-bugs -- when TSharedPtr<>, TSharedRef<>, etc. are dynamic non-persistent objects, they should be inlined instead of declared within classes 

SYMP: PluginCommands->MapAction(...) and FAUDIO_SFX_PLUGINModule::RegisterMenus() Fail to open plugin window, with the following error: LevelEditor.MainMenu.Window not found
SOLU: AUDIO_SFX_PLUGIN.CPP: Del TSharedPtr<FUICommandList> PluginCommands; AUDIO_SFX_PLUGIN.H: Add private: TSharedPtr<FUICommandList> PluginCommands, to make PluginsCommands settings persistent

SYMP: error illegal call of non static member
SOLU: FGlobalTabmanager::InsertNewDocumentTab(...); >> FGlobalTabmanager::Get()->InsertNewDocumentTab(...);