SYMP: error C2248 'FSlateControlledConstruction::operator new': cannot access private member declared in class 'FSlateControlledConstruction'	...	
SOLU: It appears TSharedRef<> in-class type declarations, and *.toSharedRef() class members are not allowed on derived Slates 

SYMP: error UMGViewportComponent derived from class SWindow, and other components - undefined
SOLU: Remove class SWindow, class IModuleInterface, class FToolBarBuilder, class FMenuBuilder, class FViewportClient forward dedclarations into header file

SYMP: UE_FLOAT64 SampleRateUInt64 = 44'100_hz; // error user-defined operator not found (overloaded operator"")
SOLU: UE_FLOAT64 SampleRateUInt64 = 44'100.0_hz; // Add float designation

SYMP: error C2338 invalid template input to std::unifrm_real_distribution (pragma once Tones.Default.Settings.h Scoping error; Multiple local template declarations)
SOLU: Move std::uniform_real_distribution<UE_FLOAT64> declaration into global Tones.Default.Settings.h: using UniformRealDistributionFloat64 = std::uniform_real_distribution<UE_FLOAT64>;

SYMP: error overloaded template not found - std::complex<double>& c_ref = c;
SOLU: An object reference must always be initialized with the address of an object - std::complex<double> c(0.0f, 0.0f); std::complex<double>& c_ref = c;

SYPM: error C3861 ComplexVectorFloat64T not defined
SOLU: using ComplexVectorFloat64T = <std::vector<std::complex<T>>>; ==> using ComplexVectorFloat64T = std::vector<std::complex<T>>;

SYMP: error C4430 Missing type specifier, int assumed: BuildPrecision, PlaybackPrecision
SOLU: class IDEPlaybackPrecision : public BuildPrecision<short> ==> class IDEPlaybackPrecision : public IDEBuildPrecision<short>
      class IDEBuildPrecision ... BuildPrecision(); ==> class IDEBuildPrecision ... IDEBuildPrecision();
      class IDEPlaybackPrecision ... PlaybackPrecision(); ==> class ... IDEPlaybackPrecision();

SYMP: error C2955: 'Vector2DT': use of alias template requires template argument list
SOLU: Vector2DT ==> Vector2DT<T>;

SYMP: error SpringReverb.cpp: SpringReverb is not a template
SOLU: [no namespace] ==> using namespace ToneLibrary;

SYMP: error Multiple object definitions, ignoring.
SOLU: Ensure includes don't branch into (compiled) unused source files; ensure there is only one project Main.

INCLUDES HIERARCHY

Tones.Default.Settings.h
.
.
ToneLibrary[App Modules + Tools + Filters etc.]
.
.
Tones.h
.
.
AUDIO_SFX_PLUGIN.h